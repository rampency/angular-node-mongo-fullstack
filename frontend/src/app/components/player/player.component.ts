import { Component, OnInit } from '@angular/core';
import { PlayerService } from '../../services/player.service';
import { Player } from '../../Player';
import { finalize } from 'rxjs/operators';
import { UiService } from 'src/app/services/ui.service';

@Component({
  selector: 'app-player',
  templateUrl: './player.component.html',
  styleUrls: ['./player.component.css'],
})
export class PlayerComponent implements OnInit {
  players: Player[] = [];
  playerBefore: Player[] = [];
  timestamp = 1610053200;
  tempTime;
  constructor(private uiService: UiService, private playerService: PlayerService, ) {
    let source = this.uiService.onDate();
    const dateObservable = source.pipe(
      finalize(() => {
        this.setup();
      })
    )
    dateObservable.subscribe((value) => this.setup(value));
  }

  ngOnInit(): void {
    this.setup();
  }

  setup(value?) {
    if(value) {
      this.timestamp = new Date(value).getTime() / 1000;
    }

    let source = this.playerService.getPlayers();
    const playerObservable = source.pipe(
      finalize(() => {
        this.getSum()
      }) // Execute when the observable completes
    )
    playerObservable.subscribe((players) => {
      players.forEach((t, index) => {
        if(!t.codename) {
          players.splice(index,1); //hack to remove autogenerated value by mongo
        }
      })
      this.playerBefore = players;
    });
  }

  getSum(){
    this.playerBefore.map((task) => {
      this.getSumForPlayer(task)
    })
  }

  getSumForPlayer(player) {
    let source = this.playerService.getActivity(player.player_id, this.timestamp);
    const acitivtyObservable = source.pipe(
      finalize(() => {
        this.sortPoints();
      }) // Execute when the observable completes
    );
    acitivtyObservable.subscribe((activities) => {
      activities.forEach((activity, index) => {
        if(index == 0 ) {
          player.sum = 0
        }
        player.sum += activity.points;
      })
     });
  }

  sortPoints () {
    this.playerBefore.sort((a,b) =>  b.sum - a.sum)
    this.players = this.playerBefore;
  }

}
